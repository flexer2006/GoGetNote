// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: api/common/v1/errors.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ErrorCode определяет стандартные коды ошибок в системе
type ErrorCode int32

const (
	// Неизвестная ошибка (значение по умолчанию)
	ErrorCode_ERROR_CODE_UNSPECIFIED ErrorCode = 0
	// Общие ошибки
	ErrorCode_ERROR_CODE_BAD_REQUEST       ErrorCode = 10 // 400 Bad Request
	ErrorCode_ERROR_CODE_UNAUTHORIZED      ErrorCode = 20 // 401 Unauthorized
	ErrorCode_ERROR_CODE_FORBIDDEN         ErrorCode = 30 // 403 Forbidden
	ErrorCode_ERROR_CODE_NOT_FOUND         ErrorCode = 40 // 404 Not Found
	ErrorCode_ERROR_CODE_CONFLICT          ErrorCode = 50 // 409 Conflict
	ErrorCode_ERROR_CODE_VALIDATION_FAILED ErrorCode = 60 // 422 Unprocessable Entity
	ErrorCode_ERROR_CODE_RATE_LIMITED      ErrorCode = 70 // 429 Too Many Requests
	ErrorCode_ERROR_CODE_INTERNAL          ErrorCode = 80 // 500 Internal Server Error
	// Ошибки аутентификации
	ErrorCode_ERROR_CODE_INVALID_CREDENTIALS ErrorCode = 201 // Неверный логин или пароль
	ErrorCode_ERROR_CODE_TOKEN_EXPIRED       ErrorCode = 202 // Токен истек
	ErrorCode_ERROR_CODE_INVALID_TOKEN       ErrorCode = 203 // Недействительный токен
	ErrorCode_ERROR_CODE_SESSION_EXPIRED     ErrorCode = 204 // Сессия истекла
	// Ошибки пользователей
	ErrorCode_ERROR_CODE_USER_ALREADY_EXISTS ErrorCode = 301 // Пользователь уже существует
	ErrorCode_ERROR_CODE_USER_NOT_FOUND      ErrorCode = 302 // Пользователь не найден
	ErrorCode_ERROR_CODE_INVALID_PASSWORD    ErrorCode = 303 // Недействительный пароль
	// Ошибки заметок
	ErrorCode_ERROR_CODE_NOTE_NOT_FOUND      ErrorCode = 401 // Заметка не найдена
	ErrorCode_ERROR_CODE_BOX_NOT_FOUND       ErrorCode = 402 // Бокс не найден
	ErrorCode_ERROR_CODE_ACCESS_DENIED       ErrorCode = 403 // Отказано в доступе к заметке/боксу
	ErrorCode_ERROR_CODE_NOTE_ALREADY_EXISTS ErrorCode = 404 // Заметка уже существует
	// Ошибки совместного доступа
	ErrorCode_ERROR_CODE_INVALID_ACCESS_LEVEL   ErrorCode = 501 // Недопустимый уровень доступа
	ErrorCode_ERROR_CODE_CANNOT_SHARE_WITH_SELF ErrorCode = 502 // Нельзя дать доступ самому себе
	ErrorCode_ERROR_CODE_ACCESS_ALREADY_GRANTED ErrorCode = 503 // Доступ уже предоставлен
	// Системные ошибки
	ErrorCode_ERROR_CODE_DATABASE_ERROR      ErrorCode = 901 // Ошибка базы данных
	ErrorCode_ERROR_CODE_CACHE_ERROR         ErrorCode = 902 // Ошибка кэша
	ErrorCode_ERROR_CODE_NETWORK_ERROR       ErrorCode = 903 // Сетевая ошибка
	ErrorCode_ERROR_CODE_SERVICE_UNAVAILABLE ErrorCode = 904 // Сервис недоступен
	ErrorCode_ERROR_CODE_TIMEOUT             ErrorCode = 905 // Таймаут операции
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:   "ERROR_CODE_UNSPECIFIED",
		10:  "ERROR_CODE_BAD_REQUEST",
		20:  "ERROR_CODE_UNAUTHORIZED",
		30:  "ERROR_CODE_FORBIDDEN",
		40:  "ERROR_CODE_NOT_FOUND",
		50:  "ERROR_CODE_CONFLICT",
		60:  "ERROR_CODE_VALIDATION_FAILED",
		70:  "ERROR_CODE_RATE_LIMITED",
		80:  "ERROR_CODE_INTERNAL",
		201: "ERROR_CODE_INVALID_CREDENTIALS",
		202: "ERROR_CODE_TOKEN_EXPIRED",
		203: "ERROR_CODE_INVALID_TOKEN",
		204: "ERROR_CODE_SESSION_EXPIRED",
		301: "ERROR_CODE_USER_ALREADY_EXISTS",
		302: "ERROR_CODE_USER_NOT_FOUND",
		303: "ERROR_CODE_INVALID_PASSWORD",
		401: "ERROR_CODE_NOTE_NOT_FOUND",
		402: "ERROR_CODE_BOX_NOT_FOUND",
		403: "ERROR_CODE_ACCESS_DENIED",
		404: "ERROR_CODE_NOTE_ALREADY_EXISTS",
		501: "ERROR_CODE_INVALID_ACCESS_LEVEL",
		502: "ERROR_CODE_CANNOT_SHARE_WITH_SELF",
		503: "ERROR_CODE_ACCESS_ALREADY_GRANTED",
		901: "ERROR_CODE_DATABASE_ERROR",
		902: "ERROR_CODE_CACHE_ERROR",
		903: "ERROR_CODE_NETWORK_ERROR",
		904: "ERROR_CODE_SERVICE_UNAVAILABLE",
		905: "ERROR_CODE_TIMEOUT",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_UNSPECIFIED":            0,
		"ERROR_CODE_BAD_REQUEST":            10,
		"ERROR_CODE_UNAUTHORIZED":           20,
		"ERROR_CODE_FORBIDDEN":              30,
		"ERROR_CODE_NOT_FOUND":              40,
		"ERROR_CODE_CONFLICT":               50,
		"ERROR_CODE_VALIDATION_FAILED":      60,
		"ERROR_CODE_RATE_LIMITED":           70,
		"ERROR_CODE_INTERNAL":               80,
		"ERROR_CODE_INVALID_CREDENTIALS":    201,
		"ERROR_CODE_TOKEN_EXPIRED":          202,
		"ERROR_CODE_INVALID_TOKEN":          203,
		"ERROR_CODE_SESSION_EXPIRED":        204,
		"ERROR_CODE_USER_ALREADY_EXISTS":    301,
		"ERROR_CODE_USER_NOT_FOUND":         302,
		"ERROR_CODE_INVALID_PASSWORD":       303,
		"ERROR_CODE_NOTE_NOT_FOUND":         401,
		"ERROR_CODE_BOX_NOT_FOUND":          402,
		"ERROR_CODE_ACCESS_DENIED":          403,
		"ERROR_CODE_NOTE_ALREADY_EXISTS":    404,
		"ERROR_CODE_INVALID_ACCESS_LEVEL":   501,
		"ERROR_CODE_CANNOT_SHARE_WITH_SELF": 502,
		"ERROR_CODE_ACCESS_ALREADY_GRANTED": 503,
		"ERROR_CODE_DATABASE_ERROR":         901,
		"ERROR_CODE_CACHE_ERROR":            902,
		"ERROR_CODE_NETWORK_ERROR":          903,
		"ERROR_CODE_SERVICE_UNAVAILABLE":    904,
		"ERROR_CODE_TIMEOUT":                905,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_v1_errors_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_api_common_v1_errors_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_api_common_v1_errors_proto_rawDescGZIP(), []int{0}
}

// ErrorResponse определяет стандартный формат ответа с ошибкой
type ErrorResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// HTTP статус-код (например, 400, 401, 403, 404, 422, 500)
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// Код ошибки для программной обработки
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// Человекочитаемое сообщение об ошибке
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// Список подробных ошибок (используется для валидации форм)
	ValidationErrors []*ValidationError `protobuf:"bytes,4,rep,name=validation_errors,json=validationErrors,proto3" json:"validation_errors,omitempty"`
	// Уникальный идентификатор ошибки для логирования
	ErrorId string `protobuf:"bytes,5,opt,name=error_id,json=errorId,proto3" json:"error_id,omitempty"`
	// Дополнительные данные для отладки (только в dev-окружении)
	Metadata      map[string]string `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	mi := &file_api_common_v1_errors_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_errors_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_api_common_v1_errors_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ErrorResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResponse) GetValidationErrors() []*ValidationError {
	if x != nil {
		return x.ValidationErrors
	}
	return nil
}

func (x *ErrorResponse) GetErrorId() string {
	if x != nil {
		return x.ErrorId
	}
	return ""
}

func (x *ErrorResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ValidationError представляет ошибку валидации конкретного поля
type ValidationError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Имя поля с ошибкой (поддерживает вложенные поля через точку, например "user.email")
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Код ошибки для программной обработки
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// Человекочитаемое сообщение об ошибке
	Message       string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_api_common_v1_errors_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_errors_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_api_common_v1_errors_proto_rawDescGZIP(), []int{1}
}

func (x *ValidationError) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ValidationError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Тип локализованного сообщения об ошибке
type LocalizedMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Код языка (например, "ru", "en")
	LanguageCode string `protobuf:"bytes,1,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	// Локализованное сообщение
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalizedMessage) Reset() {
	*x = LocalizedMessage{}
	mi := &file_api_common_v1_errors_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalizedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalizedMessage) ProtoMessage() {}

func (x *LocalizedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_errors_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalizedMessage.ProtoReflect.Descriptor instead.
func (*LocalizedMessage) Descriptor() ([]byte, []int) {
	return file_api_common_v1_errors_proto_rawDescGZIP(), []int{2}
}

func (x *LocalizedMessage) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *LocalizedMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Расширенная информация об ошибке с поддержкой локализации
type DetailedError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Код ошибки
	Code ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=common.v1.ErrorCode" json:"code,omitempty"`
	// Сообщение об ошибке по умолчанию (обычно на английском)
	DefaultMessage string `protobuf:"bytes,2,opt,name=default_message,json=defaultMessage,proto3" json:"default_message,omitempty"`
	// Локализованные сообщения
	LocalizedMessages []*LocalizedMessage `protobuf:"bytes,3,rep,name=localized_messages,json=localizedMessages,proto3" json:"localized_messages,omitempty"`
	// Техническая информация об ошибке (для отладки)
	TechnicalMessage string `protobuf:"bytes,4,opt,name=technical_message,json=technicalMessage,proto3" json:"technical_message,omitempty"`
	// Ссылка на документацию по ошибке
	DocumentationUrl string `protobuf:"bytes,5,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DetailedError) Reset() {
	*x = DetailedError{}
	mi := &file_api_common_v1_errors_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailedError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedError) ProtoMessage() {}

func (x *DetailedError) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_errors_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedError.ProtoReflect.Descriptor instead.
func (*DetailedError) Descriptor() ([]byte, []int) {
	return file_api_common_v1_errors_proto_rawDescGZIP(), []int{3}
}

func (x *DetailedError) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (x *DetailedError) GetDefaultMessage() string {
	if x != nil {
		return x.DefaultMessage
	}
	return ""
}

func (x *DetailedError) GetLocalizedMessages() []*LocalizedMessage {
	if x != nil {
		return x.LocalizedMessages
	}
	return nil
}

func (x *DetailedError) GetTechnicalMessage() string {
	if x != nil {
		return x.TechnicalMessage
	}
	return ""
}

func (x *DetailedError) GetDocumentationUrl() string {
	if x != nil {
		return x.DocumentationUrl
	}
	return ""
}

// Запрос на получение информации об ошибке
type GetErrorInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Код ошибки
	Code ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=common.v1.ErrorCode" json:"code,omitempty"`
	// Предпочитаемый язык для сообщения об ошибке (опционально)
	LanguageCode  *string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3,oneof" json:"language_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetErrorInfoRequest) Reset() {
	*x = GetErrorInfoRequest{}
	mi := &file_api_common_v1_errors_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetErrorInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetErrorInfoRequest) ProtoMessage() {}

func (x *GetErrorInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_errors_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetErrorInfoRequest.ProtoReflect.Descriptor instead.
func (*GetErrorInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_common_v1_errors_proto_rawDescGZIP(), []int{4}
}

func (x *GetErrorInfoRequest) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (x *GetErrorInfoRequest) GetLanguageCode() string {
	if x != nil && x.LanguageCode != nil {
		return *x.LanguageCode
	}
	return ""
}

// Ответ с информацией об ошибке
type GetErrorInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Подробная информация об ошибке
	Error         *DetailedError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetErrorInfoResponse) Reset() {
	*x = GetErrorInfoResponse{}
	mi := &file_api_common_v1_errors_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetErrorInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetErrorInfoResponse) ProtoMessage() {}

func (x *GetErrorInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_errors_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetErrorInfoResponse.ProtoReflect.Descriptor instead.
func (*GetErrorInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_common_v1_errors_proto_rawDescGZIP(), []int{5}
}

func (x *GetErrorInfoResponse) GetError() *DetailedError {
	if x != nil {
		return x.Error
	}
	return nil
}

// Запрос на получение списка кодов ошибок
type ListErrorCodesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Фильтр по категории ошибок (опционально)
	Category      *string `protobuf:"bytes,1,opt,name=category,proto3,oneof" json:"category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListErrorCodesRequest) Reset() {
	*x = ListErrorCodesRequest{}
	mi := &file_api_common_v1_errors_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListErrorCodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListErrorCodesRequest) ProtoMessage() {}

func (x *ListErrorCodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_errors_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListErrorCodesRequest.ProtoReflect.Descriptor instead.
func (*ListErrorCodesRequest) Descriptor() ([]byte, []int) {
	return file_api_common_v1_errors_proto_rawDescGZIP(), []int{6}
}

func (x *ListErrorCodesRequest) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

// Ответ со списком кодов ошибок
type ListErrorCodesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Список ошибок с подробной информацией
	Errors        []*DetailedError `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListErrorCodesResponse) Reset() {
	*x = ListErrorCodesResponse{}
	mi := &file_api_common_v1_errors_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListErrorCodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListErrorCodesResponse) ProtoMessage() {}

func (x *ListErrorCodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_errors_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListErrorCodesResponse.ProtoReflect.Descriptor instead.
func (*ListErrorCodesResponse) Descriptor() ([]byte, []int) {
	return file_api_common_v1_errors_proto_rawDescGZIP(), []int{7}
}

func (x *ListErrorCodesResponse) GetErrors() []*DetailedError {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_api_common_v1_errors_proto protoreflect.FileDescriptor

const file_api_common_v1_errors_proto_rawDesc = "" +
	"\n" +
	"\x1aapi/common/v1/errors.proto\x12\tcommon.v1\"\xba\x02\n" +
	"\rErrorResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x05R\x06status\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12G\n" +
	"\x11validation_errors\x18\x04 \x03(\v2\x1a.common.v1.ValidationErrorR\x10validationErrors\x12\x19\n" +
	"\berror_id\x18\x05 \x01(\tR\aerrorId\x12B\n" +
	"\bmetadata\x18\x06 \x03(\v2&.common.v1.ErrorResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"U\n" +
	"\x0fValidationError\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"Q\n" +
	"\x10LocalizedMessage\x12#\n" +
	"\rlanguage_code\x18\x01 \x01(\tR\flanguageCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x88\x02\n" +
	"\rDetailedError\x12(\n" +
	"\x04code\x18\x01 \x01(\x0e2\x14.common.v1.ErrorCodeR\x04code\x12'\n" +
	"\x0fdefault_message\x18\x02 \x01(\tR\x0edefaultMessage\x12J\n" +
	"\x12localized_messages\x18\x03 \x03(\v2\x1b.common.v1.LocalizedMessageR\x11localizedMessages\x12+\n" +
	"\x11technical_message\x18\x04 \x01(\tR\x10technicalMessage\x12+\n" +
	"\x11documentation_url\x18\x05 \x01(\tR\x10documentationUrl\"{\n" +
	"\x13GetErrorInfoRequest\x12(\n" +
	"\x04code\x18\x01 \x01(\x0e2\x14.common.v1.ErrorCodeR\x04code\x12(\n" +
	"\rlanguage_code\x18\x02 \x01(\tH\x00R\flanguageCode\x88\x01\x01B\x10\n" +
	"\x0e_language_code\"F\n" +
	"\x14GetErrorInfoResponse\x12.\n" +
	"\x05error\x18\x01 \x01(\v2\x18.common.v1.DetailedErrorR\x05error\"E\n" +
	"\x15ListErrorCodesRequest\x12\x1f\n" +
	"\bcategory\x18\x01 \x01(\tH\x00R\bcategory\x88\x01\x01B\v\n" +
	"\t_category\"J\n" +
	"\x16ListErrorCodesResponse\x120\n" +
	"\x06errors\x18\x01 \x03(\v2\x18.common.v1.DetailedErrorR\x06errors*\x83\a\n" +
	"\tErrorCode\x12\x1a\n" +
	"\x16ERROR_CODE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16ERROR_CODE_BAD_REQUEST\x10\n" +
	"\x12\x1b\n" +
	"\x17ERROR_CODE_UNAUTHORIZED\x10\x14\x12\x18\n" +
	"\x14ERROR_CODE_FORBIDDEN\x10\x1e\x12\x18\n" +
	"\x14ERROR_CODE_NOT_FOUND\x10(\x12\x17\n" +
	"\x13ERROR_CODE_CONFLICT\x102\x12 \n" +
	"\x1cERROR_CODE_VALIDATION_FAILED\x10<\x12\x1b\n" +
	"\x17ERROR_CODE_RATE_LIMITED\x10F\x12\x17\n" +
	"\x13ERROR_CODE_INTERNAL\x10P\x12#\n" +
	"\x1eERROR_CODE_INVALID_CREDENTIALS\x10\xc9\x01\x12\x1d\n" +
	"\x18ERROR_CODE_TOKEN_EXPIRED\x10\xca\x01\x12\x1d\n" +
	"\x18ERROR_CODE_INVALID_TOKEN\x10\xcb\x01\x12\x1f\n" +
	"\x1aERROR_CODE_SESSION_EXPIRED\x10\xcc\x01\x12#\n" +
	"\x1eERROR_CODE_USER_ALREADY_EXISTS\x10\xad\x02\x12\x1e\n" +
	"\x19ERROR_CODE_USER_NOT_FOUND\x10\xae\x02\x12 \n" +
	"\x1bERROR_CODE_INVALID_PASSWORD\x10\xaf\x02\x12\x1e\n" +
	"\x19ERROR_CODE_NOTE_NOT_FOUND\x10\x91\x03\x12\x1d\n" +
	"\x18ERROR_CODE_BOX_NOT_FOUND\x10\x92\x03\x12\x1d\n" +
	"\x18ERROR_CODE_ACCESS_DENIED\x10\x93\x03\x12#\n" +
	"\x1eERROR_CODE_NOTE_ALREADY_EXISTS\x10\x94\x03\x12$\n" +
	"\x1fERROR_CODE_INVALID_ACCESS_LEVEL\x10\xf5\x03\x12&\n" +
	"!ERROR_CODE_CANNOT_SHARE_WITH_SELF\x10\xf6\x03\x12&\n" +
	"!ERROR_CODE_ACCESS_ALREADY_GRANTED\x10\xf7\x03\x12\x1e\n" +
	"\x19ERROR_CODE_DATABASE_ERROR\x10\x85\a\x12\x1b\n" +
	"\x16ERROR_CODE_CACHE_ERROR\x10\x86\a\x12\x1d\n" +
	"\x18ERROR_CODE_NETWORK_ERROR\x10\x87\a\x12#\n" +
	"\x1eERROR_CODE_SERVICE_UNAVAILABLE\x10\x88\a\x12\x17\n" +
	"\x12ERROR_CODE_TIMEOUT\x10\x89\a2\xb6\x01\n" +
	"\fErrorService\x12O\n" +
	"\fGetErrorInfo\x12\x1e.common.v1.GetErrorInfoRequest\x1a\x1f.common.v1.GetErrorInfoResponse\x12U\n" +
	"\x0eListErrorCodes\x12 .common.v1.ListErrorCodesRequest\x1a!.common.v1.ListErrorCodesResponseB^Z\\gitlab.crja72.ru/golang/2025/spring/course/projects/go9/gogetnote/pkg/api/common/v1;commonv1b\x06proto3"

var (
	file_api_common_v1_errors_proto_rawDescOnce sync.Once
	file_api_common_v1_errors_proto_rawDescData []byte
)

func file_api_common_v1_errors_proto_rawDescGZIP() []byte {
	file_api_common_v1_errors_proto_rawDescOnce.Do(func() {
		file_api_common_v1_errors_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_common_v1_errors_proto_rawDesc), len(file_api_common_v1_errors_proto_rawDesc)))
	})
	return file_api_common_v1_errors_proto_rawDescData
}

var file_api_common_v1_errors_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_common_v1_errors_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_common_v1_errors_proto_goTypes = []any{
	(ErrorCode)(0),                 // 0: common.v1.ErrorCode
	(*ErrorResponse)(nil),          // 1: common.v1.ErrorResponse
	(*ValidationError)(nil),        // 2: common.v1.ValidationError
	(*LocalizedMessage)(nil),       // 3: common.v1.LocalizedMessage
	(*DetailedError)(nil),          // 4: common.v1.DetailedError
	(*GetErrorInfoRequest)(nil),    // 5: common.v1.GetErrorInfoRequest
	(*GetErrorInfoResponse)(nil),   // 6: common.v1.GetErrorInfoResponse
	(*ListErrorCodesRequest)(nil),  // 7: common.v1.ListErrorCodesRequest
	(*ListErrorCodesResponse)(nil), // 8: common.v1.ListErrorCodesResponse
	nil,                            // 9: common.v1.ErrorResponse.MetadataEntry
}
var file_api_common_v1_errors_proto_depIdxs = []int32{
	2, // 0: common.v1.ErrorResponse.validation_errors:type_name -> common.v1.ValidationError
	9, // 1: common.v1.ErrorResponse.metadata:type_name -> common.v1.ErrorResponse.MetadataEntry
	0, // 2: common.v1.DetailedError.code:type_name -> common.v1.ErrorCode
	3, // 3: common.v1.DetailedError.localized_messages:type_name -> common.v1.LocalizedMessage
	0, // 4: common.v1.GetErrorInfoRequest.code:type_name -> common.v1.ErrorCode
	4, // 5: common.v1.GetErrorInfoResponse.error:type_name -> common.v1.DetailedError
	4, // 6: common.v1.ListErrorCodesResponse.errors:type_name -> common.v1.DetailedError
	5, // 7: common.v1.ErrorService.GetErrorInfo:input_type -> common.v1.GetErrorInfoRequest
	7, // 8: common.v1.ErrorService.ListErrorCodes:input_type -> common.v1.ListErrorCodesRequest
	6, // 9: common.v1.ErrorService.GetErrorInfo:output_type -> common.v1.GetErrorInfoResponse
	8, // 10: common.v1.ErrorService.ListErrorCodes:output_type -> common.v1.ListErrorCodesResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_api_common_v1_errors_proto_init() }
func file_api_common_v1_errors_proto_init() {
	if File_api_common_v1_errors_proto != nil {
		return
	}
	file_api_common_v1_errors_proto_msgTypes[4].OneofWrappers = []any{}
	file_api_common_v1_errors_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_common_v1_errors_proto_rawDesc), len(file_api_common_v1_errors_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_common_v1_errors_proto_goTypes,
		DependencyIndexes: file_api_common_v1_errors_proto_depIdxs,
		EnumInfos:         file_api_common_v1_errors_proto_enumTypes,
		MessageInfos:      file_api_common_v1_errors_proto_msgTypes,
	}.Build()
	File_api_common_v1_errors_proto = out.File
	file_api_common_v1_errors_proto_goTypes = nil
	file_api_common_v1_errors_proto_depIdxs = nil
}
