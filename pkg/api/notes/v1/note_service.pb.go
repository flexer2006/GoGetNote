// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: api/notes/v1/note_service.proto

package notesv1

import (
	v1 "gitlab.crja72.ru/golang/2025/spring/course/projects/go9/gogetnote/pkg/api/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Статус заметки
type NoteStatus int32

const (
	// Неизвестный статус (значение по умолчанию)
	NoteStatus_NOTE_STATUS_UNSPECIFIED NoteStatus = 0
	// Активная заметка
	NoteStatus_NOTE_STATUS_ACTIVE NoteStatus = 1
	// Архивированная заметка
	NoteStatus_NOTE_STATUS_ARCHIVED NoteStatus = 2
	// Заметка в корзине
	NoteStatus_NOTE_STATUS_TRASHED NoteStatus = 3
)

// Enum value maps for NoteStatus.
var (
	NoteStatus_name = map[int32]string{
		0: "NOTE_STATUS_UNSPECIFIED",
		1: "NOTE_STATUS_ACTIVE",
		2: "NOTE_STATUS_ARCHIVED",
		3: "NOTE_STATUS_TRASHED",
	}
	NoteStatus_value = map[string]int32{
		"NOTE_STATUS_UNSPECIFIED": 0,
		"NOTE_STATUS_ACTIVE":      1,
		"NOTE_STATUS_ARCHIVED":    2,
		"NOTE_STATUS_TRASHED":     3,
	}
)

func (x NoteStatus) Enum() *NoteStatus {
	p := new(NoteStatus)
	*p = x
	return p
}

func (x NoteStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NoteStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_notes_v1_note_service_proto_enumTypes[0].Descriptor()
}

func (NoteStatus) Type() protoreflect.EnumType {
	return &file_api_notes_v1_note_service_proto_enumTypes[0]
}

func (x NoteStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NoteStatus.Descriptor instead.
func (NoteStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{0}
}

// Приоритет заметки
type NotePriority int32

const (
	// Неизвестный приоритет (значение по умолчанию)
	NotePriority_NOTE_PRIORITY_UNSPECIFIED NotePriority = 0
	// Низкий приоритет
	NotePriority_NOTE_PRIORITY_LOW NotePriority = 1
	// Средний приоритет
	NotePriority_NOTE_PRIORITY_MEDIUM NotePriority = 2
	// Высокий приоритет
	NotePriority_NOTE_PRIORITY_HIGH NotePriority = 3
	// Критический приоритет
	NotePriority_NOTE_PRIORITY_CRITICAL NotePriority = 4
)

// Enum value maps for NotePriority.
var (
	NotePriority_name = map[int32]string{
		0: "NOTE_PRIORITY_UNSPECIFIED",
		1: "NOTE_PRIORITY_LOW",
		2: "NOTE_PRIORITY_MEDIUM",
		3: "NOTE_PRIORITY_HIGH",
		4: "NOTE_PRIORITY_CRITICAL",
	}
	NotePriority_value = map[string]int32{
		"NOTE_PRIORITY_UNSPECIFIED": 0,
		"NOTE_PRIORITY_LOW":         1,
		"NOTE_PRIORITY_MEDIUM":      2,
		"NOTE_PRIORITY_HIGH":        3,
		"NOTE_PRIORITY_CRITICAL":    4,
	}
)

func (x NotePriority) Enum() *NotePriority {
	p := new(NotePriority)
	*p = x
	return p
}

func (x NotePriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotePriority) Descriptor() protoreflect.EnumDescriptor {
	return file_api_notes_v1_note_service_proto_enumTypes[1].Descriptor()
}

func (NotePriority) Type() protoreflect.EnumType {
	return &file_api_notes_v1_note_service_proto_enumTypes[1]
}

func (x NotePriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotePriority.Descriptor instead.
func (NotePriority) EnumDescriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{1}
}

// Запрос на создание заметки
type CreateNoteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Заголовок заметки
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Текст заметки
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// Список тегов
	Tags []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	// Цвет заметки (HEX код, например, "#FFFF00" для желтого)
	Color *string `protobuf:"bytes,4,opt,name=color,proto3,oneof" json:"color,omitempty"`
	// Приоритет заметки
	Priority *NotePriority `protobuf:"varint,5,opt,name=priority,proto3,enum=notes.v1.NotePriority,oneof" json:"priority,omitempty"`
	// ID бокса, в который нужно добавить заметку (если не указан, заметка добавляется в корневой бокс)
	BoxId *string `protobuf:"bytes,6,opt,name=box_id,json=boxId,proto3,oneof" json:"box_id,omitempty"`
	// Дополнительные метаданные
	Metadata map[string]string `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Геоданные заметки (опционально)
	GeoMetadata *v1.GeoMetadata `protobuf:"bytes,8,opt,name=geo_metadata,json=geoMetadata,proto3,oneof" json:"geo_metadata,omitempty"`
	// Напоминание для заметки (опционально)
	Reminder      *v1.ReminderMetadata `protobuf:"bytes,9,opt,name=reminder,proto3,oneof" json:"reminder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteRequest) Reset() {
	*x = CreateNoteRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteRequest) ProtoMessage() {}

func (x *CreateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNoteRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNoteRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateNoteRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateNoteRequest) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *CreateNoteRequest) GetPriority() NotePriority {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return NotePriority_NOTE_PRIORITY_UNSPECIFIED
}

func (x *CreateNoteRequest) GetBoxId() string {
	if x != nil && x.BoxId != nil {
		return *x.BoxId
	}
	return ""
}

func (x *CreateNoteRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateNoteRequest) GetGeoMetadata() *v1.GeoMetadata {
	if x != nil {
		return x.GeoMetadata
	}
	return nil
}

func (x *CreateNoteRequest) GetReminder() *v1.ReminderMetadata {
	if x != nil {
		return x.Reminder
	}
	return nil
}

// Запрос на получение заметки
type GetNoteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID заметки
	NoteId        string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteRequest) Reset() {
	*x = GetNoteRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteRequest) ProtoMessage() {}

func (x *GetNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteRequest.ProtoReflect.Descriptor instead.
func (*GetNoteRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetNoteRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

// Запрос на получение списка заметок
type ListNotesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Параметры пагинации
	Pagination *v1.PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// Фильтр по статусу заметок
	Status *NoteStatus `protobuf:"varint,2,opt,name=status,proto3,enum=notes.v1.NoteStatus,oneof" json:"status,omitempty"`
	// Фильтр по тегам (если указано несколько тегов, возвращаются заметки с любым из указанных тегов)
	Tags []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	// Фильтр по боксу (если указан, возвращаются только заметки из указанного бокса)
	BoxId *string `protobuf:"bytes,4,opt,name=box_id,json=boxId,proto3,oneof" json:"box_id,omitempty"`
	// Фильтр по приоритету
	Priority *NotePriority `protobuf:"varint,5,opt,name=priority,proto3,enum=notes.v1.NotePriority,oneof" json:"priority,omitempty"`
	// Параметры сортировки
	Sort          *v1.SortRequest `protobuf:"bytes,6,opt,name=sort,proto3" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotesRequest) Reset() {
	*x = ListNotesRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotesRequest) ProtoMessage() {}

func (x *ListNotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotesRequest.ProtoReflect.Descriptor instead.
func (*ListNotesRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListNotesRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListNotesRequest) GetStatus() NoteStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return NoteStatus_NOTE_STATUS_UNSPECIFIED
}

func (x *ListNotesRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListNotesRequest) GetBoxId() string {
	if x != nil && x.BoxId != nil {
		return *x.BoxId
	}
	return ""
}

func (x *ListNotesRequest) GetPriority() NotePriority {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return NotePriority_NOTE_PRIORITY_UNSPECIFIED
}

func (x *ListNotesRequest) GetSort() *v1.SortRequest {
	if x != nil {
		return x.Sort
	}
	return nil
}

// Ответ со списком заметок
type ListNotesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Список заметок
	Notes []*Note `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	// Метаданные пагинации
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotesResponse) Reset() {
	*x = ListNotesResponse{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotesResponse) ProtoMessage() {}

func (x *ListNotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotesResponse.ProtoReflect.Descriptor instead.
func (*ListNotesResponse) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListNotesResponse) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *ListNotesResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Запрос на обновление заметки
type UpdateNoteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID заметки для обновления
	NoteId string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	// Новый заголовок заметки (опционально)
	Title *string `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	// Новый текст заметки (опционально)
	Content *string `protobuf:"bytes,3,opt,name=content,proto3,oneof" json:"content,omitempty"`
	// Новый список тегов (если передан пустой массив, все теги удаляются)
	Tags []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// Новый цвет заметки (опционально)
	Color *string `protobuf:"bytes,5,opt,name=color,proto3,oneof" json:"color,omitempty"`
	// Новый приоритет заметки (опционально)
	Priority *NotePriority `protobuf:"varint,6,opt,name=priority,proto3,enum=notes.v1.NotePriority,oneof" json:"priority,omitempty"`
	// Новый статус заметки (опционально)
	Status *NoteStatus `protobuf:"varint,7,opt,name=status,proto3,enum=notes.v1.NoteStatus,oneof" json:"status,omitempty"`
	// Перемещение заметки в новый бокс (опционально)
	BoxId *string `protobuf:"bytes,8,opt,name=box_id,json=boxId,proto3,oneof" json:"box_id,omitempty"`
	// Дополнительные метаданные (опционально)
	Metadata map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Новые геоданные заметки (опционально)
	GeoMetadata *v1.GeoMetadata `protobuf:"bytes,10,opt,name=geo_metadata,json=geoMetadata,proto3,oneof" json:"geo_metadata,omitempty"`
	// Новое напоминание для заметки (опционально)
	Reminder *v1.ReminderMetadata `protobuf:"bytes,11,opt,name=reminder,proto3,oneof" json:"reminder,omitempty"`
	// Если true, удаляет существующее геометаданные
	ClearGeoMetadata bool `protobuf:"varint,12,opt,name=clear_geo_metadata,json=clearGeoMetadata,proto3" json:"clear_geo_metadata,omitempty"`
	// Если true, удаляет существующее напоминание
	ClearReminder bool `protobuf:"varint,13,opt,name=clear_reminder,json=clearReminder,proto3" json:"clear_reminder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNoteRequest) Reset() {
	*x = UpdateNoteRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteRequest) ProtoMessage() {}

func (x *UpdateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateNoteRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateNoteRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *UpdateNoteRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateNoteRequest) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *UpdateNoteRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateNoteRequest) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *UpdateNoteRequest) GetPriority() NotePriority {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return NotePriority_NOTE_PRIORITY_UNSPECIFIED
}

func (x *UpdateNoteRequest) GetStatus() NoteStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return NoteStatus_NOTE_STATUS_UNSPECIFIED
}

func (x *UpdateNoteRequest) GetBoxId() string {
	if x != nil && x.BoxId != nil {
		return *x.BoxId
	}
	return ""
}

func (x *UpdateNoteRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateNoteRequest) GetGeoMetadata() *v1.GeoMetadata {
	if x != nil {
		return x.GeoMetadata
	}
	return nil
}

func (x *UpdateNoteRequest) GetReminder() *v1.ReminderMetadata {
	if x != nil {
		return x.Reminder
	}
	return nil
}

func (x *UpdateNoteRequest) GetClearGeoMetadata() bool {
	if x != nil {
		return x.ClearGeoMetadata
	}
	return false
}

func (x *UpdateNoteRequest) GetClearReminder() bool {
	if x != nil {
		return x.ClearReminder
	}
	return false
}

// Запрос на удаление заметки
type DeleteNoteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID заметки для удаления
	NoteId string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	// Если true, заметка будет полностью удалена из системы
	// Если false (по умолчанию), заметка будет перемещена в корзину
	HardDelete    bool `protobuf:"varint,2,opt,name=hard_delete,json=hardDelete,proto3" json:"hard_delete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteRequest) Reset() {
	*x = DeleteNoteRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteRequest) ProtoMessage() {}

func (x *DeleteNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteNoteRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *DeleteNoteRequest) GetHardDelete() bool {
	if x != nil {
		return x.HardDelete
	}
	return false
}

// Запрос на поиск заметок
type SearchNotesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Поисковый запрос
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// Параметры пагинации
	Pagination *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// Фильтр по статусу заметок
	Status *NoteStatus `protobuf:"varint,3,opt,name=status,proto3,enum=notes.v1.NoteStatus,oneof" json:"status,omitempty"`
	// Фильтр по тегам
	Tags []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// Фильтр поиска по заголовкам
	SearchInTitles bool `protobuf:"varint,5,opt,name=search_in_titles,json=searchInTitles,proto3" json:"search_in_titles,omitempty"`
	// Фильтр поиска по содержимому заметок
	SearchInContent bool `protobuf:"varint,6,opt,name=search_in_content,json=searchInContent,proto3" json:"search_in_content,omitempty"`
	// Фильтр поиска по тегам
	SearchInTags bool `protobuf:"varint,7,opt,name=search_in_tags,json=searchInTags,proto3" json:"search_in_tags,omitempty"`
	// Параметры сортировки
	Sort          *v1.SortRequest `protobuf:"bytes,8,opt,name=sort,proto3" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchNotesRequest) Reset() {
	*x = SearchNotesRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchNotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNotesRequest) ProtoMessage() {}

func (x *SearchNotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNotesRequest.ProtoReflect.Descriptor instead.
func (*SearchNotesRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{6}
}

func (x *SearchNotesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchNotesRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchNotesRequest) GetStatus() NoteStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return NoteStatus_NOTE_STATUS_UNSPECIFIED
}

func (x *SearchNotesRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SearchNotesRequest) GetSearchInTitles() bool {
	if x != nil {
		return x.SearchInTitles
	}
	return false
}

func (x *SearchNotesRequest) GetSearchInContent() bool {
	if x != nil {
		return x.SearchInContent
	}
	return false
}

func (x *SearchNotesRequest) GetSearchInTags() bool {
	if x != nil {
		return x.SearchInTags
	}
	return false
}

func (x *SearchNotesRequest) GetSort() *v1.SortRequest {
	if x != nil {
		return x.Sort
	}
	return nil
}

// Структура заметки
type Note struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор заметки
	NoteId string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	// ID пользователя, создавшего заметку
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Заголовок заметки
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// Текст заметки
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// Список тегов
	Tags []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	// Статус заметки
	Status NoteStatus `protobuf:"varint,6,opt,name=status,proto3,enum=notes.v1.NoteStatus" json:"status,omitempty"`
	// Цвет заметки (HEX код)
	Color string `protobuf:"bytes,7,opt,name=color,proto3" json:"color,omitempty"`
	// Приоритет заметки
	Priority NotePriority `protobuf:"varint,8,opt,name=priority,proto3,enum=notes.v1.NotePriority" json:"priority,omitempty"`
	// ID бокса, в котором находится заметка (null для корневого бокса)
	BoxId *string `protobuf:"bytes,9,opt,name=box_id,json=boxId,proto3,oneof" json:"box_id,omitempty"`
	// Метаданные объекта
	Metadata *v1.Metadata `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Время удаления заметки (если заметка в корзине)
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	// Дополнительные метаданные
	CustomAttributes map[string]string `protobuf:"bytes,12,rep,name=custom_attributes,json=customAttributes,proto3" json:"custom_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Note) Reset() {
	*x = Note{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{7}
}

func (x *Note) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *Note) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Note) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Note) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Note) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Note) GetStatus() NoteStatus {
	if x != nil {
		return x.Status
	}
	return NoteStatus_NOTE_STATUS_UNSPECIFIED
}

func (x *Note) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Note) GetPriority() NotePriority {
	if x != nil {
		return x.Priority
	}
	return NotePriority_NOTE_PRIORITY_UNSPECIFIED
}

func (x *Note) GetBoxId() string {
	if x != nil && x.BoxId != nil {
		return *x.BoxId
	}
	return ""
}

func (x *Note) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Note) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Note) GetCustomAttributes() map[string]string {
	if x != nil {
		return x.CustomAttributes
	}
	return nil
}

// Ответ с информацией о заметке
type NoteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Заметка
	Note          *Note `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoteResponse) Reset() {
	*x = NoteResponse{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteResponse) ProtoMessage() {}

func (x *NoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteResponse.ProtoReflect.Descriptor instead.
func (*NoteResponse) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{8}
}

func (x *NoteResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

// Запрос на получение ошибки сервиса заметок
type GetNoteErrorRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Код ошибки
	ErrorCode v1.ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=common.v1.ErrorCode" json:"error_code,omitempty"`
	// Дополнительные параметры для форматирования сообщения об ошибке
	Params        map[string]string `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteErrorRequest) Reset() {
	*x = GetNoteErrorRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteErrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteErrorRequest) ProtoMessage() {}

func (x *GetNoteErrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteErrorRequest.ProtoReflect.Descriptor instead.
func (*GetNoteErrorRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetNoteErrorRequest) GetErrorCode() v1.ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return v1.ErrorCode(0)
}

func (x *GetNoteErrorRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

var File_api_notes_v1_note_service_proto protoreflect.FileDescriptor

const file_api_notes_v1_note_service_proto_rawDesc = "" +
	"\n" +
	"\x1fapi/notes/v1/note_service.proto\x12\bnotes.v1\x1a api/google/api/annotations.proto\x1a#api/google/protobuf/timestamp.proto\x1a\x1fapi/google/protobuf/empty.proto\x1a\x1eapi/common/v1/pagination.proto\x1a\x1capi/common/v1/metadata.proto\x1a\x1aapi/common/v1/errors.proto\"\x89\x04\n" +
	"\x11CreateNoteRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x12\x19\n" +
	"\x05color\x18\x04 \x01(\tH\x00R\x05color\x88\x01\x01\x127\n" +
	"\bpriority\x18\x05 \x01(\x0e2\x16.notes.v1.NotePriorityH\x01R\bpriority\x88\x01\x01\x12\x1a\n" +
	"\x06box_id\x18\x06 \x01(\tH\x02R\x05boxId\x88\x01\x01\x12E\n" +
	"\bmetadata\x18\a \x03(\v2).notes.v1.CreateNoteRequest.MetadataEntryR\bmetadata\x12>\n" +
	"\fgeo_metadata\x18\b \x01(\v2\x16.common.v1.GeoMetadataH\x03R\vgeoMetadata\x88\x01\x01\x12<\n" +
	"\breminder\x18\t \x01(\v2\x1b.common.v1.ReminderMetadataH\x04R\breminder\x88\x01\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\b\n" +
	"\x06_colorB\v\n" +
	"\t_priorityB\t\n" +
	"\a_box_idB\x0f\n" +
	"\r_geo_metadataB\v\n" +
	"\t_reminder\")\n" +
	"\x0eGetNoteRequest\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\tR\x06noteId\"\xbb\x02\n" +
	"\x10ListNotesRequest\x12<\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2\x1c.common.v1.PaginationRequestR\n" +
	"pagination\x121\n" +
	"\x06status\x18\x02 \x01(\x0e2\x14.notes.v1.NoteStatusH\x00R\x06status\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x12\x1a\n" +
	"\x06box_id\x18\x04 \x01(\tH\x01R\x05boxId\x88\x01\x01\x127\n" +
	"\bpriority\x18\x05 \x01(\x0e2\x16.notes.v1.NotePriorityH\x02R\bpriority\x88\x01\x01\x12*\n" +
	"\x04sort\x18\x06 \x01(\v2\x16.common.v1.SortRequestR\x04sortB\t\n" +
	"\a_statusB\t\n" +
	"\a_box_idB\v\n" +
	"\t_priority\"x\n" +
	"\x11ListNotesResponse\x12$\n" +
	"\x05notes\x18\x01 \x03(\v2\x0e.notes.v1.NoteR\x05notes\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.common.v1.PaginationResponseR\n" +
	"pagination\"\xd5\x05\n" +
	"\x11UpdateNoteRequest\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\tR\x06noteId\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tH\x00R\x05title\x88\x01\x01\x12\x1d\n" +
	"\acontent\x18\x03 \x01(\tH\x01R\acontent\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12\x19\n" +
	"\x05color\x18\x05 \x01(\tH\x02R\x05color\x88\x01\x01\x127\n" +
	"\bpriority\x18\x06 \x01(\x0e2\x16.notes.v1.NotePriorityH\x03R\bpriority\x88\x01\x01\x121\n" +
	"\x06status\x18\a \x01(\x0e2\x14.notes.v1.NoteStatusH\x04R\x06status\x88\x01\x01\x12\x1a\n" +
	"\x06box_id\x18\b \x01(\tH\x05R\x05boxId\x88\x01\x01\x12E\n" +
	"\bmetadata\x18\t \x03(\v2).notes.v1.UpdateNoteRequest.MetadataEntryR\bmetadata\x12>\n" +
	"\fgeo_metadata\x18\n" +
	" \x01(\v2\x16.common.v1.GeoMetadataH\x06R\vgeoMetadata\x88\x01\x01\x12<\n" +
	"\breminder\x18\v \x01(\v2\x1b.common.v1.ReminderMetadataH\aR\breminder\x88\x01\x01\x12,\n" +
	"\x12clear_geo_metadata\x18\f \x01(\bR\x10clearGeoMetadata\x12%\n" +
	"\x0eclear_reminder\x18\r \x01(\bR\rclearReminder\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\b\n" +
	"\x06_titleB\n" +
	"\n" +
	"\b_contentB\b\n" +
	"\x06_colorB\v\n" +
	"\t_priorityB\t\n" +
	"\a_statusB\t\n" +
	"\a_box_idB\x0f\n" +
	"\r_geo_metadataB\v\n" +
	"\t_reminder\"M\n" +
	"\x11DeleteNoteRequest\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\tR\x06noteId\x12\x1f\n" +
	"\vhard_delete\x18\x02 \x01(\bR\n" +
	"hardDelete\"\xe2\x02\n" +
	"\x12SearchNotesRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12<\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1c.common.v1.PaginationRequestR\n" +
	"pagination\x121\n" +
	"\x06status\x18\x03 \x01(\x0e2\x14.notes.v1.NoteStatusH\x00R\x06status\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12(\n" +
	"\x10search_in_titles\x18\x05 \x01(\bR\x0esearchInTitles\x12*\n" +
	"\x11search_in_content\x18\x06 \x01(\bR\x0fsearchInContent\x12$\n" +
	"\x0esearch_in_tags\x18\a \x01(\bR\fsearchInTags\x12*\n" +
	"\x04sort\x18\b \x01(\v2\x16.common.v1.SortRequestR\x04sortB\t\n" +
	"\a_status\"\xb3\x04\n" +
	"\x04Note\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\tR\x06noteId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12,\n" +
	"\x06status\x18\x06 \x01(\x0e2\x14.notes.v1.NoteStatusR\x06status\x12\x14\n" +
	"\x05color\x18\a \x01(\tR\x05color\x122\n" +
	"\bpriority\x18\b \x01(\x0e2\x16.notes.v1.NotePriorityR\bpriority\x12\x1a\n" +
	"\x06box_id\x18\t \x01(\tH\x00R\x05boxId\x88\x01\x01\x12/\n" +
	"\bmetadata\x18\n" +
	" \x01(\v2\x13.common.v1.MetadataR\bmetadata\x12>\n" +
	"\n" +
	"deleted_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampH\x01R\tdeletedAt\x88\x01\x01\x12Q\n" +
	"\x11custom_attributes\x18\f \x03(\v2$.notes.v1.Note.CustomAttributesEntryR\x10customAttributes\x1aC\n" +
	"\x15CustomAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\t\n" +
	"\a_box_idB\r\n" +
	"\v_deleted_at\"2\n" +
	"\fNoteResponse\x12\"\n" +
	"\x04note\x18\x01 \x01(\v2\x0e.notes.v1.NoteR\x04note\"\xc8\x01\n" +
	"\x13GetNoteErrorRequest\x123\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x0e2\x14.common.v1.ErrorCodeR\terrorCode\x12A\n" +
	"\x06params\x18\x02 \x03(\v2).notes.v1.GetNoteErrorRequest.ParamsEntryR\x06params\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*t\n" +
	"\n" +
	"NoteStatus\x12\x1b\n" +
	"\x17NOTE_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12NOTE_STATUS_ACTIVE\x10\x01\x12\x18\n" +
	"\x14NOTE_STATUS_ARCHIVED\x10\x02\x12\x17\n" +
	"\x13NOTE_STATUS_TRASHED\x10\x03*\x92\x01\n" +
	"\fNotePriority\x12\x1d\n" +
	"\x19NOTE_PRIORITY_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11NOTE_PRIORITY_LOW\x10\x01\x12\x18\n" +
	"\x14NOTE_PRIORITY_MEDIUM\x10\x02\x12\x16\n" +
	"\x12NOTE_PRIORITY_HIGH\x10\x03\x12\x1a\n" +
	"\x16NOTE_PRIORITY_CRITICAL\x10\x042\x8b\x05\n" +
	"\vNoteService\x12W\n" +
	"\n" +
	"CreateNote\x12\x1b.notes.v1.CreateNoteRequest\x1a\x16.notes.v1.NoteResponse\"\x14\x82\xd3\xe4\x93\x02\x0e:\x01*\"\t/v1/notes\x12X\n" +
	"\aGetNote\x12\x18.notes.v1.GetNoteRequest\x1a\x16.notes.v1.NoteResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v1/notes/{note_id}\x12W\n" +
	"\tListNotes\x12\x1a.notes.v1.ListNotesRequest\x1a\x1b.notes.v1.ListNotesResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/notes\x12a\n" +
	"\n" +
	"UpdateNote\x12\x1b.notes.v1.UpdateNoteRequest\x1a\x16.notes.v1.NoteResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*2\x13/v1/notes/{note_id}\x12^\n" +
	"\n" +
	"DeleteNote\x12\x1b.notes.v1.DeleteNoteRequest\x1a\x16.google.protobuf.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v1/notes/{note_id}\x12b\n" +
	"\vSearchNotes\x12\x1c.notes.v1.SearchNotesRequest\x1a\x1b.notes.v1.ListNotesResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/notes/search\x12I\n" +
	"\fGetNoteError\x12\x1d.notes.v1.GetNoteErrorRequest\x1a\x18.common.v1.ErrorResponse\"\x00B\\ZZgitlab.crja72.ru/golang/2025/spring/course/projects/go9/gogetnote/pkg/api/notes/v1;notesv1b\x06proto3"

var (
	file_api_notes_v1_note_service_proto_rawDescOnce sync.Once
	file_api_notes_v1_note_service_proto_rawDescData []byte
)

func file_api_notes_v1_note_service_proto_rawDescGZIP() []byte {
	file_api_notes_v1_note_service_proto_rawDescOnce.Do(func() {
		file_api_notes_v1_note_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_notes_v1_note_service_proto_rawDesc), len(file_api_notes_v1_note_service_proto_rawDesc)))
	})
	return file_api_notes_v1_note_service_proto_rawDescData
}

var file_api_notes_v1_note_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_notes_v1_note_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_notes_v1_note_service_proto_goTypes = []any{
	(NoteStatus)(0),               // 0: notes.v1.NoteStatus
	(NotePriority)(0),             // 1: notes.v1.NotePriority
	(*CreateNoteRequest)(nil),     // 2: notes.v1.CreateNoteRequest
	(*GetNoteRequest)(nil),        // 3: notes.v1.GetNoteRequest
	(*ListNotesRequest)(nil),      // 4: notes.v1.ListNotesRequest
	(*ListNotesResponse)(nil),     // 5: notes.v1.ListNotesResponse
	(*UpdateNoteRequest)(nil),     // 6: notes.v1.UpdateNoteRequest
	(*DeleteNoteRequest)(nil),     // 7: notes.v1.DeleteNoteRequest
	(*SearchNotesRequest)(nil),    // 8: notes.v1.SearchNotesRequest
	(*Note)(nil),                  // 9: notes.v1.Note
	(*NoteResponse)(nil),          // 10: notes.v1.NoteResponse
	(*GetNoteErrorRequest)(nil),   // 11: notes.v1.GetNoteErrorRequest
	nil,                           // 12: notes.v1.CreateNoteRequest.MetadataEntry
	nil,                           // 13: notes.v1.UpdateNoteRequest.MetadataEntry
	nil,                           // 14: notes.v1.Note.CustomAttributesEntry
	nil,                           // 15: notes.v1.GetNoteErrorRequest.ParamsEntry
	(*v1.GeoMetadata)(nil),        // 16: common.v1.GeoMetadata
	(*v1.ReminderMetadata)(nil),   // 17: common.v1.ReminderMetadata
	(*v1.PaginationRequest)(nil),  // 18: common.v1.PaginationRequest
	(*v1.SortRequest)(nil),        // 19: common.v1.SortRequest
	(*v1.PaginationResponse)(nil), // 20: common.v1.PaginationResponse
	(*v1.Metadata)(nil),           // 21: common.v1.Metadata
	(*timestamppb.Timestamp)(nil), // 22: google.protobuf.Timestamp
	(v1.ErrorCode)(0),             // 23: common.v1.ErrorCode
	(*emptypb.Empty)(nil),         // 24: google.protobuf.Empty
	(*v1.ErrorResponse)(nil),      // 25: common.v1.ErrorResponse
}
var file_api_notes_v1_note_service_proto_depIdxs = []int32{
	1,  // 0: notes.v1.CreateNoteRequest.priority:type_name -> notes.v1.NotePriority
	12, // 1: notes.v1.CreateNoteRequest.metadata:type_name -> notes.v1.CreateNoteRequest.MetadataEntry
	16, // 2: notes.v1.CreateNoteRequest.geo_metadata:type_name -> common.v1.GeoMetadata
	17, // 3: notes.v1.CreateNoteRequest.reminder:type_name -> common.v1.ReminderMetadata
	18, // 4: notes.v1.ListNotesRequest.pagination:type_name -> common.v1.PaginationRequest
	0,  // 5: notes.v1.ListNotesRequest.status:type_name -> notes.v1.NoteStatus
	1,  // 6: notes.v1.ListNotesRequest.priority:type_name -> notes.v1.NotePriority
	19, // 7: notes.v1.ListNotesRequest.sort:type_name -> common.v1.SortRequest
	9,  // 8: notes.v1.ListNotesResponse.notes:type_name -> notes.v1.Note
	20, // 9: notes.v1.ListNotesResponse.pagination:type_name -> common.v1.PaginationResponse
	1,  // 10: notes.v1.UpdateNoteRequest.priority:type_name -> notes.v1.NotePriority
	0,  // 11: notes.v1.UpdateNoteRequest.status:type_name -> notes.v1.NoteStatus
	13, // 12: notes.v1.UpdateNoteRequest.metadata:type_name -> notes.v1.UpdateNoteRequest.MetadataEntry
	16, // 13: notes.v1.UpdateNoteRequest.geo_metadata:type_name -> common.v1.GeoMetadata
	17, // 14: notes.v1.UpdateNoteRequest.reminder:type_name -> common.v1.ReminderMetadata
	18, // 15: notes.v1.SearchNotesRequest.pagination:type_name -> common.v1.PaginationRequest
	0,  // 16: notes.v1.SearchNotesRequest.status:type_name -> notes.v1.NoteStatus
	19, // 17: notes.v1.SearchNotesRequest.sort:type_name -> common.v1.SortRequest
	0,  // 18: notes.v1.Note.status:type_name -> notes.v1.NoteStatus
	1,  // 19: notes.v1.Note.priority:type_name -> notes.v1.NotePriority
	21, // 20: notes.v1.Note.metadata:type_name -> common.v1.Metadata
	22, // 21: notes.v1.Note.deleted_at:type_name -> google.protobuf.Timestamp
	14, // 22: notes.v1.Note.custom_attributes:type_name -> notes.v1.Note.CustomAttributesEntry
	9,  // 23: notes.v1.NoteResponse.note:type_name -> notes.v1.Note
	23, // 24: notes.v1.GetNoteErrorRequest.error_code:type_name -> common.v1.ErrorCode
	15, // 25: notes.v1.GetNoteErrorRequest.params:type_name -> notes.v1.GetNoteErrorRequest.ParamsEntry
	2,  // 26: notes.v1.NoteService.CreateNote:input_type -> notes.v1.CreateNoteRequest
	3,  // 27: notes.v1.NoteService.GetNote:input_type -> notes.v1.GetNoteRequest
	4,  // 28: notes.v1.NoteService.ListNotes:input_type -> notes.v1.ListNotesRequest
	6,  // 29: notes.v1.NoteService.UpdateNote:input_type -> notes.v1.UpdateNoteRequest
	7,  // 30: notes.v1.NoteService.DeleteNote:input_type -> notes.v1.DeleteNoteRequest
	8,  // 31: notes.v1.NoteService.SearchNotes:input_type -> notes.v1.SearchNotesRequest
	11, // 32: notes.v1.NoteService.GetNoteError:input_type -> notes.v1.GetNoteErrorRequest
	10, // 33: notes.v1.NoteService.CreateNote:output_type -> notes.v1.NoteResponse
	10, // 34: notes.v1.NoteService.GetNote:output_type -> notes.v1.NoteResponse
	5,  // 35: notes.v1.NoteService.ListNotes:output_type -> notes.v1.ListNotesResponse
	10, // 36: notes.v1.NoteService.UpdateNote:output_type -> notes.v1.NoteResponse
	24, // 37: notes.v1.NoteService.DeleteNote:output_type -> google.protobuf.Empty
	5,  // 38: notes.v1.NoteService.SearchNotes:output_type -> notes.v1.ListNotesResponse
	25, // 39: notes.v1.NoteService.GetNoteError:output_type -> common.v1.ErrorResponse
	33, // [33:40] is the sub-list for method output_type
	26, // [26:33] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_api_notes_v1_note_service_proto_init() }
func file_api_notes_v1_note_service_proto_init() {
	if File_api_notes_v1_note_service_proto != nil {
		return
	}
	file_api_notes_v1_note_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_api_notes_v1_note_service_proto_msgTypes[2].OneofWrappers = []any{}
	file_api_notes_v1_note_service_proto_msgTypes[4].OneofWrappers = []any{}
	file_api_notes_v1_note_service_proto_msgTypes[6].OneofWrappers = []any{}
	file_api_notes_v1_note_service_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_notes_v1_note_service_proto_rawDesc), len(file_api_notes_v1_note_service_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_notes_v1_note_service_proto_goTypes,
		DependencyIndexes: file_api_notes_v1_note_service_proto_depIdxs,
		EnumInfos:         file_api_notes_v1_note_service_proto_enumTypes,
		MessageInfos:      file_api_notes_v1_note_service_proto_msgTypes,
	}.Build()
	File_api_notes_v1_note_service_proto = out.File
	file_api_notes_v1_note_service_proto_goTypes = nil
	file_api_notes_v1_note_service_proto_depIdxs = nil
}
