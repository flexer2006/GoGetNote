// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: api/notes/v1/note_service.proto

package notesv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос на создание заметки
type CreateNoteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Заголовок заметки
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Текст заметки
	Content       string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteRequest) Reset() {
	*x = CreateNoteRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteRequest) ProtoMessage() {}

func (x *CreateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNoteRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNoteRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Запрос на получение заметки
type GetNoteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID заметки
	NoteId        string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteRequest) Reset() {
	*x = GetNoteRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteRequest) ProtoMessage() {}

func (x *GetNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteRequest.ProtoReflect.Descriptor instead.
func (*GetNoteRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetNoteRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

// Запрос на получение списка заметок
type ListNotesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Максимальное количество элементов
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Смещение для пагинации
	Offset        int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotesRequest) Reset() {
	*x = ListNotesRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotesRequest) ProtoMessage() {}

func (x *ListNotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotesRequest.ProtoReflect.Descriptor instead.
func (*ListNotesRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListNotesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListNotesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Ответ со списком заметок
type ListNotesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Список заметок
	Notes []*Note `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	// Общее количество доступных элементов
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Смещение, использованное в запросе
	Offset int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// Размер страницы, использованный в запросе
	Limit         int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotesResponse) Reset() {
	*x = ListNotesResponse{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotesResponse) ProtoMessage() {}

func (x *ListNotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotesResponse.ProtoReflect.Descriptor instead.
func (*ListNotesResponse) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListNotesResponse) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *ListNotesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListNotesResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListNotesResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Запрос на обновление заметки
type UpdateNoteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID заметки для обновления
	NoteId string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	// Новый заголовок заметки (опционально)
	Title *string `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	// Новый текст заметки (опционально)
	Content       *string `protobuf:"bytes,3,opt,name=content,proto3,oneof" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNoteRequest) Reset() {
	*x = UpdateNoteRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteRequest) ProtoMessage() {}

func (x *UpdateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateNoteRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateNoteRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *UpdateNoteRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateNoteRequest) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

// Запрос на удаление заметки
type DeleteNoteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID заметки для удаления
	NoteId        string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteRequest) Reset() {
	*x = DeleteNoteRequest{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteRequest) ProtoMessage() {}

func (x *DeleteNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteNoteRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

// Структура заметки
type Note struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор заметки
	NoteId string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	// ID пользователя, создавшего заметку
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Заголовок заметки
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// Текст заметки
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// Время создания
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Время последнего обновления
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Note) Reset() {
	*x = Note{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{6}
}

func (x *Note) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *Note) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Note) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Note) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Note) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Note) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Ответ с информацией о заметке
type NoteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Заметка
	Note          *Note `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoteResponse) Reset() {
	*x = NoteResponse{}
	mi := &file_api_notes_v1_note_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteResponse) ProtoMessage() {}

func (x *NoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_notes_v1_note_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteResponse.ProtoReflect.Descriptor instead.
func (*NoteResponse) Descriptor() ([]byte, []int) {
	return file_api_notes_v1_note_service_proto_rawDescGZIP(), []int{7}
}

func (x *NoteResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

var File_api_notes_v1_note_service_proto protoreflect.FileDescriptor

const file_api_notes_v1_note_service_proto_rawDesc = "" +
	"\n" +
	"\x1fapi/notes/v1/note_service.proto\x12\bnotes.v1\x1a#api/google/protobuf/timestamp.proto\x1a\x1fapi/google/protobuf/empty.proto\x1a api/google/api/annotations.proto\"C\n" +
	"\x11CreateNoteRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\")\n" +
	"\x0eGetNoteRequest\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\tR\x06noteId\"@\n" +
	"\x10ListNotesRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"\x88\x01\n" +
	"\x11ListNotesResponse\x12$\n" +
	"\x05notes\x18\x01 \x03(\v2\x0e.notes.v1.NoteR\x05notes\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"|\n" +
	"\x11UpdateNoteRequest\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\tR\x06noteId\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tH\x00R\x05title\x88\x01\x01\x12\x1d\n" +
	"\acontent\x18\x03 \x01(\tH\x01R\acontent\x88\x01\x01B\b\n" +
	"\x06_titleB\n" +
	"\n" +
	"\b_content\",\n" +
	"\x11DeleteNoteRequest\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\tR\x06noteId\"\xde\x01\n" +
	"\x04Note\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\tR\x06noteId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"2\n" +
	"\fNoteResponse\x12\"\n" +
	"\x04note\x18\x01 \x01(\v2\x0e.notes.v1.NoteR\x04note2\xf0\x03\n" +
	"\vNoteService\x12[\n" +
	"\n" +
	"CreateNote\x12\x1b.notes.v1.CreateNoteRequest\x1a\x16.notes.v1.NoteResponse\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/api/v1/notes\x12\\\n" +
	"\aGetNote\x12\x18.notes.v1.GetNoteRequest\x1a\x16.notes.v1.NoteResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/notes/{note_id}\x12[\n" +
	"\tListNotes\x12\x1a.notes.v1.ListNotesRequest\x1a\x1b.notes.v1.ListNotesResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/api/v1/notes\x12e\n" +
	"\n" +
	"UpdateNote\x12\x1b.notes.v1.UpdateNoteRequest\x1a\x16.notes.v1.NoteResponse\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*2\x17/api/v1/notes/{note_id}\x12b\n" +
	"\n" +
	"DeleteNote\x12\x1b.notes.v1.DeleteNoteRequest\x1a\x16.google.protobuf.Empty\"\x1f\x82\xd3\xe4\x93\x02\x19*\x17/api/v1/notes/{note_id}B$Z\"gogetnote/pkg/api/notes/v1;notesv1b\x06proto3"

var (
	file_api_notes_v1_note_service_proto_rawDescOnce sync.Once
	file_api_notes_v1_note_service_proto_rawDescData []byte
)

func file_api_notes_v1_note_service_proto_rawDescGZIP() []byte {
	file_api_notes_v1_note_service_proto_rawDescOnce.Do(func() {
		file_api_notes_v1_note_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_notes_v1_note_service_proto_rawDesc), len(file_api_notes_v1_note_service_proto_rawDesc)))
	})
	return file_api_notes_v1_note_service_proto_rawDescData
}

var file_api_notes_v1_note_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_notes_v1_note_service_proto_goTypes = []any{
	(*CreateNoteRequest)(nil),     // 0: notes.v1.CreateNoteRequest
	(*GetNoteRequest)(nil),        // 1: notes.v1.GetNoteRequest
	(*ListNotesRequest)(nil),      // 2: notes.v1.ListNotesRequest
	(*ListNotesResponse)(nil),     // 3: notes.v1.ListNotesResponse
	(*UpdateNoteRequest)(nil),     // 4: notes.v1.UpdateNoteRequest
	(*DeleteNoteRequest)(nil),     // 5: notes.v1.DeleteNoteRequest
	(*Note)(nil),                  // 6: notes.v1.Note
	(*NoteResponse)(nil),          // 7: notes.v1.NoteResponse
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 9: google.protobuf.Empty
}
var file_api_notes_v1_note_service_proto_depIdxs = []int32{
	6, // 0: notes.v1.ListNotesResponse.notes:type_name -> notes.v1.Note
	8, // 1: notes.v1.Note.created_at:type_name -> google.protobuf.Timestamp
	8, // 2: notes.v1.Note.updated_at:type_name -> google.protobuf.Timestamp
	6, // 3: notes.v1.NoteResponse.note:type_name -> notes.v1.Note
	0, // 4: notes.v1.NoteService.CreateNote:input_type -> notes.v1.CreateNoteRequest
	1, // 5: notes.v1.NoteService.GetNote:input_type -> notes.v1.GetNoteRequest
	2, // 6: notes.v1.NoteService.ListNotes:input_type -> notes.v1.ListNotesRequest
	4, // 7: notes.v1.NoteService.UpdateNote:input_type -> notes.v1.UpdateNoteRequest
	5, // 8: notes.v1.NoteService.DeleteNote:input_type -> notes.v1.DeleteNoteRequest
	7, // 9: notes.v1.NoteService.CreateNote:output_type -> notes.v1.NoteResponse
	7, // 10: notes.v1.NoteService.GetNote:output_type -> notes.v1.NoteResponse
	3, // 11: notes.v1.NoteService.ListNotes:output_type -> notes.v1.ListNotesResponse
	7, // 12: notes.v1.NoteService.UpdateNote:output_type -> notes.v1.NoteResponse
	9, // 13: notes.v1.NoteService.DeleteNote:output_type -> google.protobuf.Empty
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_notes_v1_note_service_proto_init() }
func file_api_notes_v1_note_service_proto_init() {
	if File_api_notes_v1_note_service_proto != nil {
		return
	}
	file_api_notes_v1_note_service_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_notes_v1_note_service_proto_rawDesc), len(file_api_notes_v1_note_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_notes_v1_note_service_proto_goTypes,
		DependencyIndexes: file_api_notes_v1_note_service_proto_depIdxs,
		MessageInfos:      file_api_notes_v1_note_service_proto_msgTypes,
	}.Build()
	File_api_notes_v1_note_service_proto = out.File
	file_api_notes_v1_note_service_proto_goTypes = nil
	file_api_notes_v1_note_service_proto_depIdxs = nil
}
