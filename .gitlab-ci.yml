image: golang:1.24.2

stages:
  - test
  - build
  - deploy

variables:
  GO111MODULE: "on"
  TEST_COVERAGE_THRESHOLD: 30
  MICROSERVICES_PATHS: "./internal/auth/... ./internal/notes/..."

before_script:
  - go mod download

test:
  stage: test
  script:
    - apt-get update && apt-get install -y bc
    - |
      PKGS=(
        ./internal/auth/adapters/grpc
        ./internal/auth/adapters/postgres
        ./internal/auth/adapters/services
        ./internal/auth/app
        ./internal/auth/config
        ./internal/auth/db
        ./internal/notes/adapters/grpc
        ./internal/notes/adapters/postgres
        ./internal/notes/adapters/services
        ./internal/notes/app
        ./internal/notes/config
        ./internal/notes/db
      )
      > coverage.txt
      for pkg in "${PKGS[@]}"; do
        go test -coverprofile=profile.out -covermode=atomic "$pkg"
        if [ -f profile.out ]; then
          tail -n +2 profile.out >> coverage.txt
        fi
      done
      echo "mode: atomic" | cat - coverage.txt > coverage_all.txt && mv coverage_all.txt coverage.txt
      COVERAGE=$(go tool cover -func=coverage.txt | grep total | awk '{print substr($3, 1, length($3)-1)}')
      echo "Total selected microservice coverage: $COVERAGE%"
      if (( $(echo "$COVERAGE < $TEST_COVERAGE_THRESHOLD" | bc -l) )); then
        echo "❌ Test coverage ($COVERAGE%) is below threshold of $TEST_COVERAGE_THRESHOLD%"
        exit 1
      fi
  only:
    - merge_requests
    - main
    - develop

build:
  stage: build
  script:
    - mkdir -p bin
    - GOOS=linux GOARCH=amd64 go build -o bin/auth-service ./cmd/auth/...
    - GOOS=linux GOARCH=amd64 go build -o bin/notes-service ./cmd/notes/...
    - GOOS=linux GOARCH=amd64 go build -o bin/gateway-service ./cmd/gateway/...
  only:
    - main
    - develop
    - tags

deploy-staging:
  stage: deploy
  script:
    - echo "Deploying to staging environment..."
  environment:
    name: dev
  only:
    - develop
  when: manual

deploy-production:
  stage: deploy
  script:
    - echo "Deploying to production environment..."
  environment:
    name: prd
  only:
    - main
    - tags
  when: manual