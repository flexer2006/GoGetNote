syntax = "proto3";

package auth.v1;

import "api/google/protobuf/timestamp.proto";
import "api/google/protobuf/empty.proto";
import "api/google/api/annotations.proto";

option go_package = "gitlab.crja72.ru/golang/2025/spring/course/projects/go9/gogetnote/pkg/api/auth/v1;authv1";

// UserService предоставляет методы для работы с профилем пользователя
service UserService {
  // Получение профиля текущего пользователя
  // Идентификация происходит через токен
  rpc GetUserProfile(google.protobuf.Empty) returns (UserProfileResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/me"
    };
  }
}

// Ответ с информацией о пользователе
message UserProfileResponse {
  // ID пользователя
  string user_id = 1;
  // Email
  string email = 2;
  // Имя пользователя
  string username = 3;
  // Дата регистрации
  google.protobuf.Timestamp created_at = 4;
}